"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlexClientAccount = void 0;
const appkit_1 = require("@eversdk/appkit");
const helpers_1 = require("../helpers");
class FlexClientAccount extends appkit_1.Account {
    constructor(options) {
        var _a;
        super(FlexClientAccount.package, options);
        this.log = (_a = options.log) !== null && _a !== void 0 ? _a : helpers_1.Log.default;
    }
    deployContract() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.deployHelper)(this, "", {});
        });
    }
    runDeployPriceXchg(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "deployPriceXchg", input, options);
        });
    }
    deployPriceXchg(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "deployPriceXchg", input);
        });
    }
    runCancelXchgOrder(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "cancelXchgOrder", input, options);
        });
    }
    cancelXchgOrder(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "cancelXchgOrder", input);
        });
    }
    runTransfer(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "transfer", input, options);
        });
    }
    transfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "transfer", input);
        });
    }
    runTransferTokens(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "transferTokens", input, options);
        });
    }
    transferTokens(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "transferTokens", input);
        });
    }
    runDeployEmptyFlexWallet(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "deployEmptyFlexWallet", input, options);
        });
    }
    deployEmptyFlexWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "deployEmptyFlexWallet", input);
        });
    }
    runDeployIndex(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "deployIndex", input, options);
        });
    }
    deployIndex(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "deployIndex", input);
        });
    }
    runReBindWallets(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "reBindWallets", input, options);
        });
    }
    reBindWallets(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "reBindWallets", input);
        });
    }
    runDestroyIndex(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "destroyIndex", input, options);
        });
    }
    destroyIndex(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "destroyIndex", input);
        });
    }
    runBurnWallet(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "burnWallet", input, options);
        });
    }
    burnWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "burnWallet", input);
        });
    }
    runBurnThemAll(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "burnThemAll", input, options);
        });
    }
    burnThemAll(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "burnThemAll", input);
        });
    }
    runContinueBurnThemAll(options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "continueBurnThemAll", {}, options);
        });
    }
    continueBurnThemAll() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "continueBurnThemAll", {});
        });
    }
    runCancelThemAll(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "cancelThemAll", input, options);
        });
    }
    cancelThemAll(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "cancelThemAll", input);
        });
    }
    runContinueCancelThemAll(options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "continueCancelThemAll", {}, options);
        });
    }
    continueCancelThemAll() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "continueCancelThemAll", {});
        });
    }
    runUnwrapWallet(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "unwrapWallet", input, options);
        });
    }
    unwrapWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "unwrapWallet", input);
        });
    }
    runBindWallet(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "bindWallet", input, options);
        });
    }
    bindWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "bindWallet", input);
        });
    }
    runOnTip3Transfer(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "onTip3Transfer", input, options);
        });
    }
    onTip3Transfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "onTip3Transfer", input);
        });
    }
    runUpgrade(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "upgrade", input, options);
        });
    }
    upgrade(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "upgrade", input);
        });
    }
    runGetPayloadForDeployInternalWallet(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getPayloadForDeployInternalWallet", input, options);
        });
    }
    getPayloadForDeployInternalWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getPayloadForDeployInternalWallet", input);
        });
    }
    runGetPayloadForEverReTransferArgs(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getPayloadForEverReTransferArgs", input, options);
        });
    }
    getPayloadForEverReTransferArgs(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getPayloadForEverReTransferArgs", input);
        });
    }
    runGetPriceXchgAddress(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getPriceXchgAddress", input, options);
        });
    }
    getPriceXchgAddress(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getPriceXchgAddress", input);
        });
    }
    runGetUserIdIndex(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getUserIdIndex", input, options);
        });
    }
    getUserIdIndex(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getUserIdIndex", input);
        });
    }
    runGetDetails(options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getDetails", {}, options);
        });
    }
    getDetails() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getDetails", {});
        });
    }
}
exports.FlexClientAccount = FlexClientAccount;
FlexClientAccount.package = {
    abi: { "ABI version": 2, "version": "2.3.0", "header": ["pubkey", "time", "expire"], "functions": [{ "name": "deployPriceXchg", "inputs": [{ "name": "sell", "type": "bool" }, { "name": "immediate_client", "type": "bool" }, { "name": "post_order", "type": "bool" }, { "name": "price_num", "type": "uint128" }, { "name": "amount", "type": "uint128" }, { "name": "lend_amount", "type": "uint128" }, { "name": "lend_finish_time", "type": "uint32" }, { "name": "evers", "type": "uint128" }, { "name": "unsalted_price_code", "type": "cell" }, { "name": "price_salt", "type": "cell" }, { "name": "my_tip3_addr", "type": "address" }, { "name": "user_id", "type": "uint256" }, { "name": "order_id", "type": "uint256" }], "outputs": [{ "name": "value0", "type": "address" }], "id": "0xa" }, { "name": "cancelXchgOrder", "inputs": [{ "name": "sell", "type": "bool" }, { "name": "price_num", "type": "uint128" }, { "name": "value", "type": "uint128" }, { "name": "salted_price_code", "type": "cell" }, { "name": "user_id", "type": "optional(uint256)" }, { "name": "order_id", "type": "optional(uint256)" }], "outputs": [], "id": "0xb" }, { "name": "transfer", "inputs": [{ "name": "dest", "type": "address" }, { "name": "value", "type": "uint128" }, { "name": "bounce", "type": "bool" }], "outputs": [], "id": "0xc" }, { "name": "transferTokens", "inputs": [{ "name": "src", "type": "address" }, { "components": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "name": "dst", "type": "tuple" }, { "name": "tokens", "type": "uint128" }, { "name": "evers", "type": "uint128" }, { "name": "keep_evers", "type": "uint128" }], "outputs": [], "id": "0xd" }, { "name": "deployEmptyFlexWallet", "inputs": [{ "name": "pubkey", "type": "uint256" }, { "name": "evers_to_wallet", "type": "uint128" }, { "components": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "root_address", "type": "address" }], "name": "tip3cfg", "type": "tuple" }, { "name": "trader", "type": "uint256" }, { "name": "flex_wallet_code", "type": "cell" }], "outputs": [{ "name": "value0", "type": "address" }], "id": "0xe" }, { "name": "deployIndex", "inputs": [{ "name": "user_id", "type": "uint256" }, { "name": "lend_pubkey", "type": "uint256" }, { "name": "name", "type": "string" }, { "name": "evers_all", "type": "uint128" }, { "name": "evers_to_auth_idx", "type": "uint128" }, { "name": "refill_wallet", "type": "uint128" }, { "name": "min_refill", "type": "uint128" }], "outputs": [], "id": "0xf" }, { "name": "reBindWallets", "inputs": [{ "name": "user_id", "type": "uint256" }, { "name": "set_binding", "type": "bool" }, { "components": [{ "name": "flex", "type": "address" }, { "name": "unsalted_price_code_hash", "type": "uint256" }], "name": "binding", "type": "optional(tuple)" }, { "name": "set_trader", "type": "bool" }, { "name": "trader", "type": "optional(uint256)" }, { "name": "wallets", "type": "address[]" }, { "name": "evers_relend_call", "type": "uint128" }, { "name": "evers_each_wallet_call", "type": "uint128" }, { "name": "evers_to_remove", "type": "uint128" }, { "name": "evers_to_auth_idx", "type": "uint128" }], "outputs": [], "id": "0x10" }, { "name": "destroyIndex", "inputs": [{ "name": "user_id", "type": "uint256" }, { "name": "evers", "type": "uint128" }], "outputs": [], "id": "0x11" }, { "name": "burnWallet", "inputs": [{ "name": "evers_value", "type": "uint128" }, { "name": "out_pubkey", "type": "uint256" }, { "name": "out_owner", "type": "optional(address)" }, { "name": "my_tip3_addr", "type": "address" }, { "name": "notify", "type": "optional(cell)" }], "outputs": [], "id": "0x12" }, { "name": "burnThemAll", "inputs": [{ "name": "burn_ev", "type": "uint128" }, { "components": [{ "name": "out_pubkey", "type": "uint256" }, { "name": "out_owner", "type": "optional(address)" }, { "name": "wallet", "type": "address" }, { "name": "notify", "type": "optional(cell)" }], "name": "burns", "type": "tuple[]" }], "outputs": [], "id": "0x13" }, { "name": "continueBurnThemAll", "inputs": [], "outputs": [] }, { "name": "cancelThemAll", "inputs": [{ "name": "cancel_ev", "type": "uint128" }, { "name": "prices", "type": "address[]" }], "outputs": [], "id": "0x14" }, { "name": "continueCancelThemAll", "inputs": [], "outputs": [] }, { "name": "unwrapWallet", "inputs": [{ "name": "evers_value", "type": "uint128" }, { "name": "out_pubkey", "type": "uint256" }, { "name": "out_owner", "type": "optional(address)" }, { "name": "my_tip3_addr", "type": "address" }, { "name": "tokens", "type": "uint128" }, { "name": "notify", "type": "optional(cell)" }], "outputs": [], "id": "0x15" }, { "name": "bindWallet", "inputs": [{ "name": "evers", "type": "uint128" }, { "name": "my_tip3_addr", "type": "address" }, { "name": "set_binding", "type": "bool" }, { "components": [{ "name": "flex", "type": "address" }, { "name": "unsalted_price_code_hash", "type": "uint256" }], "name": "binding", "type": "optional(tuple)" }, { "name": "set_trader", "type": "bool" }, { "name": "trader", "type": "optional(uint256)" }], "outputs": [], "id": "0x16" }, { "name": "onTip3Transfer", "inputs": [{ "name": "_answer_id", "type": "uint32" }, { "name": "balance", "type": "uint128" }, { "name": "new_tokens", "type": "uint128" }, { "name": "evers_balance", "type": "uint128" }, { "components": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "root_address", "type": "address" }], "name": "tip3cfg", "type": "tuple" }, { "components": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "name": "sender", "type": "optional(tuple)" }, { "components": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "name": "receiver", "type": "tuple" }, { "name": "payload", "type": "cell" }, { "name": "answer_addr", "type": "address" }], "outputs": [], "id": "0xca" }, { "name": "upgrade", "inputs": [{ "name": "request_evers", "type": "uint128" }, { "name": "user_data_cfg", "type": "address" }], "outputs": [], "id": "0x17" }, { "name": "getPayloadForDeployInternalWallet", "inputs": [{ "name": "owner_pubkey", "type": "uint256" }, { "name": "owner_addr", "type": "optional(address)" }, { "name": "evers", "type": "uint128" }, { "name": "keep_evers", "type": "uint128" }], "outputs": [{ "name": "value0", "type": "cell" }], "id": "0x18" }, { "name": "getPayloadForEverReTransferArgs", "inputs": [{ "name": "wallet_deploy_evers", "type": "uint128" }, { "name": "wallet_keep_evers", "type": "uint128" }], "outputs": [{ "name": "value0", "type": "cell" }], "id": "0x19" }, { "name": "getPriceXchgAddress", "inputs": [{ "name": "price_num", "type": "uint128" }, { "name": "salted_price_code", "type": "cell" }], "outputs": [{ "name": "value0", "type": "address" }], "id": "0x1a" }, { "name": "getUserIdIndex", "inputs": [{ "name": "user_id", "type": "uint256" }], "outputs": [{ "name": "value0", "type": "address" }], "id": "0x1b" }, { "name": "getDetails", "inputs": [], "outputs": [{ "name": "owner", "type": "uint256" }, { "components": [{ "name": "wallet", "type": "uint32" }, { "name": "exchange", "type": "uint32" }, { "name": "user", "type": "uint32" }], "name": "triplet", "type": "tuple" }, { "components": [{ "name": "wallet", "type": "uint32" }, { "name": "exchange", "type": "uint32" }, { "name": "user", "type": "uint32" }], "name": "ex_triplet", "type": "optional(tuple)" }, { "name": "auth_index_code", "type": "cell" }, { "name": "user_id_index_code", "type": "cell" }], "id": "0x1c" }], "fields": [{ "name": "__uninitialized", "type": "bool" }, { "name": "__replay", "type": "uint64" }, { "name": "__await_next_id", "type": "uint32" }, { "name": "__await_dict", "type": "optional(cell)" }, { "name": "owner_", "type": "uint256" }, { "components": [{ "name": "wallet", "type": "uint32" }, { "name": "exchange", "type": "uint32" }, { "name": "user", "type": "uint32" }], "name": "triplet_", "type": "tuple" }, { "components": [{ "name": "wallet", "type": "uint32" }, { "name": "exchange", "type": "uint32" }, { "name": "user", "type": "uint32" }], "name": "ex_triplet_", "type": "tuple" }, { "name": "auth_index_code_", "type": "optional(cell)" }, { "name": "user_id_index_code_", "type": "optional(cell)" }, { "components": [{ "name": "flex", "type": "address" }, { "name": "unsalted_price_code_hash", "type": "uint256" }], "name": "binding_", "type": "optional(tuple)" }, { "name": "packet_burning_", "type": "bool" }, { "name": "burn_ev_", "type": "uint128" }, { "components": [{ "name": "out_pubkey", "type": "uint256" }, { "name": "out_owner", "type": "optional(address)" }, { "name": "wallet", "type": "address" }, { "name": "notify", "type": "optional(cell)" }], "name": "burns_", "type": "tuple[]" }, { "name": "packet_canceling_", "type": "bool" }, { "name": "cancel_ev_", "type": "uint128" }, { "name": "prices_", "type": "address[]" }], "events": [] },
    tvc: "",
    code: "",
    codeHash: "9db53235cdb8593e28e53204fa1c1879ce4ab6f947a318a83b7f81a73ec5bb64",
};
//# sourceMappingURL=FlexClientAccount.js.map