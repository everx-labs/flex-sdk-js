"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WrapperAccount = void 0;
const appkit_1 = require("@eversdk/appkit");
const helpers_1 = require("../helpers");
class WrapperAccount extends appkit_1.Account {
    constructor(options) {
        var _a;
        super(WrapperAccount.package, options);
        this.log = (_a = options.log) !== null && _a !== void 0 ? _a : helpers_1.Log.default;
    }
    deployContract() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.deployHelper)(this, "", {});
        });
    }
    runInit(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "init", input);
        });
    }
    init(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "init", input);
        });
    }
    runDeployEmptyWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "deployEmptyWallet", input);
        });
    }
    deployEmptyWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "deployEmptyWallet", input);
        });
    }
    runOnTip3Transfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "onTip3Transfer", input);
        });
    }
    onTip3Transfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "onTip3Transfer", input);
        });
    }
    runBurn(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "burn", input);
        });
    }
    burn(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "burn", input);
        });
    }
    runTransferFromReserveWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "transferFromReserveWallet", input);
        });
    }
    transferFromReserveWallet(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "transferFromReserveWallet", input);
        });
    }
    runRequestTotalGranted(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "requestTotalGranted", input);
        });
    }
    requestTotalGranted(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "requestTotalGranted", input);
        });
    }
    runCloned(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "cloned", input);
        });
    }
    cloned(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "cloned", input);
        });
    }
    runSetCloned(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "setCloned", input);
        });
    }
    setCloned(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "setCloned", input);
        });
    }
    runGetDetails() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getDetails", {});
        });
    }
    getDetails() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getDetails", {});
        });
    }
    runGetTip3Config() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getTip3Config", {});
        });
    }
    getTip3Config() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getTip3Config", {});
        });
    }
    runHasInternalWalletCode() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "hasInternalWalletCode", {});
        });
    }
    hasInternalWalletCode() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "hasInternalWalletCode", {});
        });
    }
    runGetWalletAddress(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getWalletAddress", input);
        });
    }
    getWalletAddress(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getWalletAddress", input);
        });
    }
    runGetReserveWallet() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getReserveWallet", {});
        });
    }
    getReserveWallet() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getReserveWallet", {});
        });
    }
}
exports.WrapperAccount = WrapperAccount;
WrapperAccount.package = {
    abi: { "ABI version": 2, "version": "2.2.0", "header": ["pubkey", "time", "expire"], "functions": [{ "name": "init", "inputs": [{ "name": "external_wallet", "type": "address" }, { "name": "reserve_wallet_evers", "type": "uint128" }, { "name": "internal_wallet_code", "type": "cell" }], "outputs": [], "id": "0xa" }, { "name": "deployEmptyWallet", "inputs": [{ "name": "_answer_id", "type": "uint32" }, { "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }, { "name": "evers", "type": "uint128" }], "outputs": [{ "name": "value0", "type": "address" }], "id": "0xb" }, { "name": "onTip3Transfer", "inputs": [{ "name": "_answer_id", "type": "uint32" }, { "name": "balance", "type": "uint128" }, { "name": "new_tokens", "type": "uint128" }, { "name": "evers_balance", "type": "uint128" }, { "components": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "root_address", "type": "address" }], "name": "tip3cfg", "type": "tuple" }, { "components": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "name": "sender", "type": "optional(tuple)" }, { "components": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "name": "receiver", "type": "tuple" }, { "name": "payload", "type": "cell" }, { "name": "answer_addr", "type": "address" }], "outputs": [{ "name": "err_code", "type": "uint32" }, { "name": "flex_wallet", "type": "address" }], "id": "0xca" }, { "name": "burn", "inputs": [{ "name": "tokens", "type": "uint128" }, { "name": "answer_addr", "type": "address" }, { "name": "sender_pubkey", "type": "uint256" }, { "name": "sender_owner", "type": "optional(address)" }, { "name": "out_pubkey", "type": "uint256" }, { "name": "out_owner", "type": "optional(address)" }, { "name": "notify", "type": "optional(cell)" }], "outputs": [], "id": "0xc" }, { "name": "transferFromReserveWallet", "inputs": [{ "name": "answer_addr", "type": "optional(address)" }, { "name": "to", "type": "address" }, { "name": "tokens", "type": "uint128" }], "outputs": [], "id": "0xd" }, { "name": "requestTotalGranted", "inputs": [{ "name": "_answer_id", "type": "uint32" }], "outputs": [{ "name": "value0", "type": "uint128" }], "id": "0xe" }, { "name": "cloned", "inputs": [{ "name": "_answer_id", "type": "uint32" }], "outputs": [{ "name": "first", "type": "optional(address)" }, { "name": "second", "type": "uint256" }], "id": "0x400" }, { "name": "setCloned", "inputs": [{ "name": "cloned", "type": "optional(address)" }, { "name": "cloned_pubkey", "type": "uint256" }, { "name": "wrappers_cfg", "type": "address" }, { "name": "wrappers_cfg_code_hash", "type": "uint256" }, { "name": "wrappers_cfg_code_depth", "type": "uint16" }], "outputs": [], "id": "0x500" }, { "name": "getDetails", "inputs": [], "outputs": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "total_granted", "type": "uint128" }, { "name": "wallet_code", "type": "cell" }, { "name": "external_wallet", "type": "optional(address)" }, { "name": "reserve_wallet", "type": "address" }, { "name": "super_root", "type": "address" }, { "name": "cloned", "type": "optional(address)" }, { "name": "type_id", "type": "uint8" }], "id": "0x100" }, { "name": "getTip3Config", "inputs": [], "outputs": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "root_address", "type": "address" }], "id": "0x200" }, { "name": "hasInternalWalletCode", "inputs": [], "outputs": [{ "name": "value0", "type": "bool" }], "id": "0x10" }, { "name": "getWalletAddress", "inputs": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "outputs": [{ "name": "value0", "type": "address" }], "id": "0x300" }, { "name": "getReserveWallet", "inputs": [], "outputs": [{ "name": "value0", "type": "address" }], "id": "0x12" }], "fields": [{ "name": "__uninitialized", "type": "bool" }, { "name": "wic_unsalted_code_", "type": "cell" }, { "name": "name_", "type": "string" }, { "name": "symbol_", "type": "string" }, { "name": "decimals_", "type": "uint8" }, { "name": "workchain_id_", "type": "int8" }, { "name": "root_pubkey_", "type": "uint256" }, { "name": "total_granted_", "type": "uint128" }, { "name": "internal_wallet_code_", "type": "optional(cell)" }, { "name": "start_balance_", "type": "varuint16" }, { "name": "super_root_", "type": "optional(address)" }, { "name": "wallet_", "type": "optional(address)" }, { "name": "cloned_", "type": "optional(address)" }, { "name": "cloned_pubkey_", "type": "uint256" }, { "name": "type_id_", "type": "uint8" }], "events": [] },
    tvc: "",
    code: "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",
    codeHash: "016dd15c03ca5a57f8017ea80f4bad29c9fe45d957d9584efd81eaf95ade4cef",
};
//# sourceMappingURL=WrapperAccount.js.map