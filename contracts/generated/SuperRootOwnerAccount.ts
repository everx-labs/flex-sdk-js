
import { Account, AccountOptions } from "@eversdk/appkit";
import { AbiContract } from "@eversdk/core";
import { 
    deployHelper,
    runHelper, 
    runLocalHelper, 
    Transaction, 
    ContractPackageEx, 
    Log, 
} from "../helpers";

export class SuperRootOwnerAccount extends Account {
    static package: ContractPackageEx = {
        abi: {"ABI version":2,"version":"2.2.0","header":["pubkey","time","expire"],"functions":[{"name":"constructor","inputs":[{"name":"pubkey","type":"uint256"}],"outputs":[]},{"name":"setCode","inputs":[{"name":"type","type":"uint8"},{"name":"code","type":"cell"}],"outputs":[]},{"name":"deploySuperRoot","inputs":[{"name":"evers","type":"uint128"},{"name":"prev_super_root","type":"optional(address)"}],"outputs":[{"name":"value0","type":"address"}]},{"name":"update","inputs":[{"name":"main_evers","type":"uint128"},{"name":"cfg_deploy_evers","type":"uint128"},{"name":"cfg_keep_evers","type":"uint128"},{"components":[{"name":"wallet","type":"uint32"},{"name":"exchange","type":"uint32"},{"name":"user","type":"uint32"}],"name":"version","type":"tuple"},{"name":"wrappers_cfg","type":"address"},{"name":"flex","type":"address"},{"name":"user_cfg","type":"address"},{"name":"description","type":"string"}],"outputs":[]},{"name":"release","inputs":[{"name":"main_evers","type":"uint128"}],"outputs":[]},{"name":"addWrapperType","inputs":[{"name":"main_evers","type":"uint128"},{"name":"wrappers_cfg_keep_evers","type":"uint128"},{"name":"wrappers_cfg","type":"address"},{"name":"type","type":"uint8"},{"name":"wrapper_deployer","type":"address"}],"outputs":[]},{"name":"addWrapper","inputs":[{"name":"main_evers","type":"uint128"},{"name":"wrappers_cfg_keep_evers","type":"uint128"},{"name":"wrappers_cfg","type":"address"},{"components":[{"name":"deploy","type":"uint128"},{"name":"setnext","type":"uint128"},{"name":"wic_keep","type":"uint128"}],"name":"evers","type":"tuple"},{"name":"symbol","type":"string"},{"name":"type","type":"uint8"},{"name":"init_args","type":"cell"}],"outputs":[]},{"name":"addXchgPair","inputs":[{"name":"main_evers","type":"uint128"},{"name":"flex","type":"address"},{"components":[{"name":"deploy","type":"uint128"},{"name":"setnext","type":"uint128"},{"name":"pair_keep","type":"uint128"}],"name":"evers","type":"tuple"},{"components":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"uint8"},{"name":"root_pubkey","type":"uint256"},{"name":"root_address","type":"address"}],"name":"major_tip3cfg","type":"tuple"},{"components":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"uint8"},{"name":"root_pubkey","type":"uint256"},{"name":"root_address","type":"address"}],"name":"minor_tip3cfg","type":"tuple"},{"name":"min_amount","type":"uint128"},{"name":"minmove","type":"uint128"},{"name":"price_denum","type":"uint128"},{"name":"notify_addr","type":"address"}],"outputs":[]},{"name":"unlistWrapper","inputs":[{"name":"main_evers","type":"uint128"},{"name":"wrappers_cfg","type":"address"},{"name":"wic","type":"address"}],"outputs":[]},{"name":"unlistXchgPair","inputs":[{"name":"main_evers","type":"uint128"},{"name":"flex","type":"address"},{"name":"pair","type":"address"}],"outputs":[]},{"name":"deployWrappersConfig","inputs":[{"name":"main_evers","type":"uint128"},{"name":"deploy_evers","type":"uint128"},{"name":"wrappers_cfg_keep_evers","type":"uint128"},{"name":"token_version","type":"uint32"}],"outputs":[{"name":"value0","type":"address"}]},{"name":"deployFlex","inputs":[{"name":"main_evers","type":"uint128"},{"name":"deploy_evers","type":"uint128"},{"name":"keep_evers","type":"uint128"},{"components":[{"name":"deploy","type":"uint128"},{"name":"setnext","type":"uint128"},{"name":"pair_keep","type":"uint128"}],"name":"evers","type":"tuple"},{"name":"old_flex","type":"optional(address)"},{"name":"exchange_version","type":"uint32"},{"components":[{"name":"transfer_tip3","type":"uint128"},{"name":"return_ownership","type":"uint128"},{"name":"order_answer","type":"uint128"},{"name":"process_queue","type":"uint128"},{"name":"send_notify","type":"uint128"},{"name":"dest_wallet_keep_evers","type":"uint128"}],"name":"ev_cfg","type":"tuple"},{"name":"deals_limit","type":"uint8"}],"outputs":[{"name":"value0","type":"address"}]},{"name":"deployUserDataConfig","inputs":[{"name":"main_evers","type":"uint128"},{"name":"deploy_evers","type":"uint128"},{"components":[{"name":"wallet","type":"uint32"},{"name":"exchange","type":"uint32"},{"name":"user","type":"uint32"}],"name":"triplet","type":"tuple"},{"name":"flex","type":"address"}],"outputs":[{"name":"value0","type":"address"}]},{"name":"cloneWrappersConfig","inputs":[{"name":"main_evers","type":"uint128"},{"name":"wrappers_cfg","type":"address"},{"name":"wrapper_cfg_keep_evers","type":"uint128"},{"name":"clone_deploy_evers","type":"uint128"},{"components":[{"name":"deploy","type":"uint128"},{"name":"setnext","type":"uint128"},{"name":"wic_keep","type":"uint128"}],"name":"wic_evers","type":"tuple"},{"name":"new_token_version","type":"uint32"},{"name":"wrapper_deployers","type":"address[]"}],"outputs":[{"name":"value0","type":"address"}]},{"name":"setFlags","inputs":[{"name":"main_evers","type":"uint128"},{"name":"stop_trade","type":"optional(bool)"},{"name":"abandon_ship","type":"optional(bool)"},{"name":"update_started","type":"optional(bool)"}],"outputs":[]},{"name":"setOwner","inputs":[{"name":"main_evers","type":"uint128"},{"name":"owner","type":"address"}],"outputs":[]},{"name":"setUpdateTeam","inputs":[{"name":"main_evers","type":"uint128"},{"name":"team","type":"optional(address)"}],"outputs":[]},{"name":"setNextSuperRoot","inputs":[{"name":"main_evers","type":"uint128"},{"name":"next_super_root","type":"address"}],"outputs":[]},{"name":"getDetails","inputs":[],"outputs":[{"name":"initialized","type":"bool"},{"name":"pubkey","type":"uint256"},{"name":"super_root","type":"optional(address)"},{"name":"super_root_code","type":"optional(cell)"},{"name":"global_cfg_code","type":"optional(cell)"},{"name":"flex_client_stub","type":"optional(cell)"},{"name":"wrappers_cfg_code","type":"optional(cell)"},{"name":"wic_code","type":"optional(cell)"},{"name":"flex_code","type":"optional(cell)"},{"name":"pair_code","type":"optional(cell)"},{"name":"price_code","type":"optional(cell)"},{"name":"user_data_cfg_code","type":"optional(cell)"},{"name":"flex_client_code","type":"optional(cell)"},{"name":"auth_index_code","type":"optional(cell)"},{"name":"user_id_index_code","type":"optional(cell)"}]}],"fields":[{"name":"__uninitialized","type":"bool"},{"name":"__replay","type":"uint64"},{"name":"__await_next_id","type":"uint32"},{"name":"__await_dict","type":"optional(cell)"},{"name":"pubkey_","type":"uint256"},{"name":"super_root_","type":"optional(address)"},{"name":"super_root_code_","type":"optional(cell)"},{"name":"global_cfg_code_","type":"optional(cell)"},{"name":"flex_client_stub_","type":"optional(cell)"},{"name":"wrappers_cfg_code_","type":"optional(cell)"},{"name":"wic_code_","type":"optional(cell)"},{"name":"flex_code_","type":"optional(cell)"},{"name":"pair_code_","type":"optional(cell)"},{"name":"price_code_","type":"optional(cell)"},{"name":"user_data_cfg_code_","type":"optional(cell)"},{"name":"flex_client_code_","type":"optional(cell)"},{"name":"auth_index_code_","type":"optional(cell)"},{"name":"user_id_index_code_","type":"optional(cell)"}],"events":[]} as unknown as AbiContract,
        tvc: "",
        code: "",
        codeHash: "1aedd7f1acea8f76180f2ce805b8f3d58568ef282342554baf933e12a68cb177",
    };
    log: Log;
    constructor(
        options: AccountOptions & {
            log?: Log
        }
    ) {
        super(SuperRootOwnerAccount.package, options);
        this.log = options.log ?? Log.default;
    }
    async deployContract(input: {
        pubkey: string | number | bigint /* uint256 */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await deployHelper(this, "constructor", input);
    }

    async runSetCode(input: {
        type: number /* uint8 */,
        code: string /* cell */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "setCode", input);
    }

    async runLocalSetCode(input: {
        type: number /* uint8 */,
        code: string /* cell */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "setCode", input);
    }

    async runDeploySuperRoot(input: {
        evers: string | number | bigint /* uint128 */,
        prev_super_root?: string /* optional(address) */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runHelper(this, "deploySuperRoot", input);
    }

    async runLocalDeploySuperRoot(input: {
        evers: string | number | bigint /* uint128 */,
        prev_super_root?: string /* optional(address) */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runLocalHelper(this, "deploySuperRoot", input);
    }

    async runUpdate(input: {
        main_evers: string | number | bigint /* uint128 */,
        cfg_deploy_evers: string | number | bigint /* uint128 */,
        cfg_keep_evers: string | number | bigint /* uint128 */,
        version: {
            wallet: number /* uint32 */,
            exchange: number /* uint32 */,
            user: number /* uint32 */,
        } /* tuple */,
        wrappers_cfg: string /* address */,
        flex: string /* address */,
        user_cfg: string /* address */,
        description: string /* string */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "update", input);
    }

    async runLocalUpdate(input: {
        main_evers: string | number | bigint /* uint128 */,
        cfg_deploy_evers: string | number | bigint /* uint128 */,
        cfg_keep_evers: string | number | bigint /* uint128 */,
        version: {
            wallet: number /* uint32 */,
            exchange: number /* uint32 */,
            user: number /* uint32 */,
        } /* tuple */,
        wrappers_cfg: string /* address */,
        flex: string /* address */,
        user_cfg: string /* address */,
        description: string /* string */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "update", input);
    }

    async runRelease(input: {
        main_evers: string | number | bigint /* uint128 */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "release", input);
    }

    async runLocalRelease(input: {
        main_evers: string | number | bigint /* uint128 */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "release", input);
    }

    async runAddWrapperType(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg_keep_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        type: number /* uint8 */,
        wrapper_deployer: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "addWrapperType", input);
    }

    async runLocalAddWrapperType(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg_keep_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        type: number /* uint8 */,
        wrapper_deployer: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "addWrapperType", input);
    }

    async runAddWrapper(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg_keep_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            wic_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        symbol: string /* string */,
        type: number /* uint8 */,
        init_args: string /* cell */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "addWrapper", input);
    }

    async runLocalAddWrapper(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg_keep_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            wic_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        symbol: string /* string */,
        type: number /* uint8 */,
        init_args: string /* cell */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "addWrapper", input);
    }

    async runAddXchgPair(input: {
        main_evers: string | number | bigint /* uint128 */,
        flex: string /* address */,
        evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            pair_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        major_tip3cfg: {
            name: string /* string */,
            symbol: string /* string */,
            decimals: number /* uint8 */,
            root_pubkey: string | number | bigint /* uint256 */,
            root_address: string /* address */,
        } /* tuple */,
        minor_tip3cfg: {
            name: string /* string */,
            symbol: string /* string */,
            decimals: number /* uint8 */,
            root_pubkey: string | number | bigint /* uint256 */,
            root_address: string /* address */,
        } /* tuple */,
        min_amount: string | number | bigint /* uint128 */,
        minmove: string | number | bigint /* uint128 */,
        price_denum: string | number | bigint /* uint128 */,
        notify_addr: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "addXchgPair", input);
    }

    async runLocalAddXchgPair(input: {
        main_evers: string | number | bigint /* uint128 */,
        flex: string /* address */,
        evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            pair_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        major_tip3cfg: {
            name: string /* string */,
            symbol: string /* string */,
            decimals: number /* uint8 */,
            root_pubkey: string | number | bigint /* uint256 */,
            root_address: string /* address */,
        } /* tuple */,
        minor_tip3cfg: {
            name: string /* string */,
            symbol: string /* string */,
            decimals: number /* uint8 */,
            root_pubkey: string | number | bigint /* uint256 */,
            root_address: string /* address */,
        } /* tuple */,
        min_amount: string | number | bigint /* uint128 */,
        minmove: string | number | bigint /* uint128 */,
        price_denum: string | number | bigint /* uint128 */,
        notify_addr: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "addXchgPair", input);
    }

    async runUnlistWrapper(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        wic: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "unlistWrapper", input);
    }

    async runLocalUnlistWrapper(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        wic: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "unlistWrapper", input);
    }

    async runUnlistXchgPair(input: {
        main_evers: string | number | bigint /* uint128 */,
        flex: string /* address */,
        pair: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "unlistXchgPair", input);
    }

    async runLocalUnlistXchgPair(input: {
        main_evers: string | number | bigint /* uint128 */,
        flex: string /* address */,
        pair: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "unlistXchgPair", input);
    }

    async runDeployWrappersConfig(input: {
        main_evers: string | number | bigint /* uint128 */,
        deploy_evers: string | number | bigint /* uint128 */,
        wrappers_cfg_keep_evers: string | number | bigint /* uint128 */,
        token_version: number /* uint32 */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runHelper(this, "deployWrappersConfig", input);
    }

    async runLocalDeployWrappersConfig(input: {
        main_evers: string | number | bigint /* uint128 */,
        deploy_evers: string | number | bigint /* uint128 */,
        wrappers_cfg_keep_evers: string | number | bigint /* uint128 */,
        token_version: number /* uint32 */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runLocalHelper(this, "deployWrappersConfig", input);
    }

    async runDeployFlex(input: {
        main_evers: string | number | bigint /* uint128 */,
        deploy_evers: string | number | bigint /* uint128 */,
        keep_evers: string | number | bigint /* uint128 */,
        evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            pair_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        old_flex?: string /* optional(address) */,
        exchange_version: number /* uint32 */,
        ev_cfg: {
            transfer_tip3: string | number | bigint /* uint128 */,
            return_ownership: string | number | bigint /* uint128 */,
            order_answer: string | number | bigint /* uint128 */,
            process_queue: string | number | bigint /* uint128 */,
            send_notify: string | number | bigint /* uint128 */,
            dest_wallet_keep_evers: string | number | bigint /* uint128 */,
        } /* tuple */,
        deals_limit: number /* uint8 */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runHelper(this, "deployFlex", input);
    }

    async runLocalDeployFlex(input: {
        main_evers: string | number | bigint /* uint128 */,
        deploy_evers: string | number | bigint /* uint128 */,
        keep_evers: string | number | bigint /* uint128 */,
        evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            pair_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        old_flex?: string /* optional(address) */,
        exchange_version: number /* uint32 */,
        ev_cfg: {
            transfer_tip3: string | number | bigint /* uint128 */,
            return_ownership: string | number | bigint /* uint128 */,
            order_answer: string | number | bigint /* uint128 */,
            process_queue: string | number | bigint /* uint128 */,
            send_notify: string | number | bigint /* uint128 */,
            dest_wallet_keep_evers: string | number | bigint /* uint128 */,
        } /* tuple */,
        deals_limit: number /* uint8 */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runLocalHelper(this, "deployFlex", input);
    }

    async runDeployUserDataConfig(input: {
        main_evers: string | number | bigint /* uint128 */,
        deploy_evers: string | number | bigint /* uint128 */,
        triplet: {
            wallet: number /* uint32 */,
            exchange: number /* uint32 */,
            user: number /* uint32 */,
        } /* tuple */,
        flex: string /* address */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runHelper(this, "deployUserDataConfig", input);
    }

    async runLocalDeployUserDataConfig(input: {
        main_evers: string | number | bigint /* uint128 */,
        deploy_evers: string | number | bigint /* uint128 */,
        triplet: {
            wallet: number /* uint32 */,
            exchange: number /* uint32 */,
            user: number /* uint32 */,
        } /* tuple */,
        flex: string /* address */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runLocalHelper(this, "deployUserDataConfig", input);
    }

    async runCloneWrappersConfig(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        wrapper_cfg_keep_evers: string | number | bigint /* uint128 */,
        clone_deploy_evers: string | number | bigint /* uint128 */,
        wic_evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            wic_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        new_token_version: number /* uint32 */,
        wrapper_deployers: string[] /* address[] */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runHelper(this, "cloneWrappersConfig", input);
    }

    async runLocalCloneWrappersConfig(input: {
        main_evers: string | number | bigint /* uint128 */,
        wrappers_cfg: string /* address */,
        wrapper_cfg_keep_evers: string | number | bigint /* uint128 */,
        clone_deploy_evers: string | number | bigint /* uint128 */,
        wic_evers: {
            deploy: string | number | bigint /* uint128 */,
            setnext: string | number | bigint /* uint128 */,
            wic_keep: string | number | bigint /* uint128 */,
        } /* tuple */,
        new_token_version: number /* uint32 */,
        wrapper_deployers: string[] /* address[] */,
    }): Promise<{
        transaction: Transaction,
        output: {
            value0: string /* address */,
        }
    }> {
        return await runLocalHelper(this, "cloneWrappersConfig", input);
    }

    async runSetFlags(input: {
        main_evers: string | number | bigint /* uint128 */,
        stop_trade?: boolean /* optional(bool) */,
        abandon_ship?: boolean /* optional(bool) */,
        update_started?: boolean /* optional(bool) */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "setFlags", input);
    }

    async runLocalSetFlags(input: {
        main_evers: string | number | bigint /* uint128 */,
        stop_trade?: boolean /* optional(bool) */,
        abandon_ship?: boolean /* optional(bool) */,
        update_started?: boolean /* optional(bool) */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "setFlags", input);
    }

    async runSetOwner(input: {
        main_evers: string | number | bigint /* uint128 */,
        owner: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "setOwner", input);
    }

    async runLocalSetOwner(input: {
        main_evers: string | number | bigint /* uint128 */,
        owner: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "setOwner", input);
    }

    async runSetUpdateTeam(input: {
        main_evers: string | number | bigint /* uint128 */,
        team?: string /* optional(address) */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "setUpdateTeam", input);
    }

    async runLocalSetUpdateTeam(input: {
        main_evers: string | number | bigint /* uint128 */,
        team?: string /* optional(address) */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "setUpdateTeam", input);
    }

    async runSetNextSuperRoot(input: {
        main_evers: string | number | bigint /* uint128 */,
        next_super_root: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runHelper(this, "setNextSuperRoot", input);
    }

    async runLocalSetNextSuperRoot(input: {
        main_evers: string | number | bigint /* uint128 */,
        next_super_root: string /* address */,
    }): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "setNextSuperRoot", input);
    }

    async runGetDetails(): Promise<{
        transaction: Transaction,
        output: {
            initialized: boolean /* bool */,
            pubkey: string /* uint256 */,
            super_root?: string /* optional(address) */,
            super_root_code?: string /* optional(cell) */,
            global_cfg_code?: string /* optional(cell) */,
            flex_client_stub?: string /* optional(cell) */,
            wrappers_cfg_code?: string /* optional(cell) */,
            wic_code?: string /* optional(cell) */,
            flex_code?: string /* optional(cell) */,
            pair_code?: string /* optional(cell) */,
            price_code?: string /* optional(cell) */,
            user_data_cfg_code?: string /* optional(cell) */,
            flex_client_code?: string /* optional(cell) */,
            auth_index_code?: string /* optional(cell) */,
            user_id_index_code?: string /* optional(cell) */,
        }
    }> {
        return await runHelper(this, "getDetails", {});
    }

    async runLocalGetDetails(): Promise<{
        transaction: Transaction,
        output: {
            initialized: boolean /* bool */,
            pubkey: string /* uint256 */,
            super_root?: string /* optional(address) */,
            super_root_code?: string /* optional(cell) */,
            global_cfg_code?: string /* optional(cell) */,
            flex_client_stub?: string /* optional(cell) */,
            wrappers_cfg_code?: string /* optional(cell) */,
            wic_code?: string /* optional(cell) */,
            flex_code?: string /* optional(cell) */,
            pair_code?: string /* optional(cell) */,
            price_code?: string /* optional(cell) */,
            user_data_cfg_code?: string /* optional(cell) */,
            flex_client_code?: string /* optional(cell) */,
            auth_index_code?: string /* optional(cell) */,
            user_id_index_code?: string /* optional(cell) */,
        }
    }> {
        return await runLocalHelper(this, "getDetails", {});
    }

}

