"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TONTokenWalletAccount = void 0;
const appkit_1 = require("@eversdk/appkit");
const helpers_1 = require("../helpers");
class TONTokenWalletAccount extends appkit_1.Account {
    constructor(options) {
        var _a;
        super(TONTokenWalletAccount.package, options);
        this.log = (_a = options.log) !== null && _a !== void 0 ? _a : helpers_1.Log.default;
    }
    deployContract() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.deployHelper)(this, "", {});
        });
    }
    runTransfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "transfer", input);
        });
    }
    runLocalTransfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "transfer", input);
        });
    }
    runTransferToRecipient(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "transferToRecipient", input);
        });
    }
    runLocalTransferToRecipient(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "transferToRecipient", input);
        });
    }
    runBalance(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "balance", input);
        });
    }
    runLocalBalance(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "balance", input);
        });
    }
    runAcceptMint(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "acceptMint", input);
        });
    }
    runLocalAcceptMint(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "acceptMint", input);
        });
    }
    runAcceptTransfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "acceptTransfer", input);
        });
    }
    runLocalAcceptTransfer(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "acceptTransfer", input);
        });
    }
    runDestroy(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "destroy", input);
        });
    }
    runLocalDestroy(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "destroy", input);
        });
    }
    runDetails(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "details", input);
        });
    }
    runLocalDetails(input) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "details", input);
        });
    }
    runGetDetails() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getDetails", {});
        });
    }
    runLocalGetDetails() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getDetails", {});
        });
    }
    runGetBalance() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runHelper)(this, "getBalance", {});
        });
    }
    runLocalGetBalance() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield (0, helpers_1.runLocalHelper)(this, "getBalance", {});
        });
    }
}
exports.TONTokenWalletAccount = TONTokenWalletAccount;
TONTokenWalletAccount.package = {
    abi: { "ABI version": 2, "version": "2.2.0", "header": ["pubkey", "time", "expire"], "functions": [{ "name": "transfer", "inputs": [{ "name": "_answer_id", "type": "uint32" }, { "name": "answer_addr", "type": "optional(address)" }, { "name": "to", "type": "address" }, { "name": "tokens", "type": "uint128" }, { "name": "evers", "type": "uint128" }, { "name": "return_ownership", "type": "uint128" }, { "name": "notify_payload", "type": "optional(cell)" }], "outputs": [], "id": "0xa" }, { "name": "transferToRecipient", "inputs": [{ "name": "_answer_id", "type": "uint32" }, { "name": "answer_addr", "type": "optional(address)" }, { "components": [{ "name": "pubkey", "type": "uint256" }, { "name": "owner", "type": "optional(address)" }], "name": "to", "type": "tuple" }, { "name": "tokens", "type": "uint128" }, { "name": "evers", "type": "uint128" }, { "name": "keep_evers", "type": "uint128" }, { "name": "deploy", "type": "bool" }, { "name": "return_ownership", "type": "uint128" }, { "name": "notify_payload", "type": "optional(cell)" }], "outputs": [], "id": "0xb" }, { "name": "balance", "inputs": [{ "name": "_answer_id", "type": "uint32" }], "outputs": [{ "name": "value0", "type": "uint128" }], "id": "0xc" }, { "name": "acceptMint", "inputs": [{ "name": "_value", "type": "uint128" }, { "name": "answer_addr", "type": "address" }, { "name": "keep_evers", "type": "uint128" }, { "name": "notify_payload", "type": "optional(cell)" }], "outputs": [], "id": "0x4384f298" }, { "name": "acceptTransfer", "inputs": [{ "name": "_value", "type": "uint128" }, { "name": "answer_addr", "type": "address" }, { "name": "keep_evers", "type": "uint128" }, { "name": "sender_pubkey", "type": "uint256" }, { "name": "sender_owner", "type": "optional(address)" }, { "name": "payload", "type": "optional(cell)" }], "outputs": [], "id": "0x67a0b95f" }, { "name": "destroy", "inputs": [{ "name": "dest", "type": "address" }], "outputs": [], "id": "0xd" }, { "name": "details", "inputs": [{ "name": "_answer_id", "type": "uint32" }], "outputs": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "balance", "type": "uint128" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "root_address", "type": "address" }, { "name": "wallet_pubkey", "type": "uint256" }, { "name": "owner_address", "type": "optional(address)" }, { "name": "lend_pubkey", "type": "optional(uint256)" }, { "components": [{ "components": [{ "components": [{ "name": "workchain_id", "type": "int8" }, { "name": "address", "type": "uint256" }], "name": "dest", "type": "tuple" }], "name": "lend_key", "type": "tuple" }, { "name": "lend_balance", "type": "uint128" }, { "name": "lend_finish_time", "type": "uint32" }], "name": "lend_owners", "type": "tuple[]" }, { "name": "lend_balance", "type": "uint128" }, { "components": [{ "name": "flex", "type": "address" }, { "name": "unsalted_price_code_hash", "type": "uint256" }], "name": "binding", "type": "optional(tuple)" }, { "name": "code_hash", "type": "uint256" }, { "name": "code_depth", "type": "uint16" }, { "name": "workchain_id", "type": "int8" }], "id": "0x14" }, { "name": "getDetails", "inputs": [], "outputs": [{ "name": "name", "type": "string" }, { "name": "symbol", "type": "string" }, { "name": "decimals", "type": "uint8" }, { "name": "balance", "type": "uint128" }, { "name": "root_pubkey", "type": "uint256" }, { "name": "root_address", "type": "address" }, { "name": "wallet_pubkey", "type": "uint256" }, { "name": "owner_address", "type": "optional(address)" }, { "name": "lend_pubkey", "type": "optional(uint256)" }, { "components": [{ "components": [{ "components": [{ "name": "workchain_id", "type": "int8" }, { "name": "address", "type": "uint256" }], "name": "dest", "type": "tuple" }], "name": "lend_key", "type": "tuple" }, { "name": "lend_balance", "type": "uint128" }, { "name": "lend_finish_time", "type": "uint32" }], "name": "lend_owners", "type": "tuple[]" }, { "name": "lend_balance", "type": "uint128" }, { "components": [{ "name": "flex", "type": "address" }, { "name": "unsalted_price_code_hash", "type": "uint256" }], "name": "binding", "type": "optional(tuple)" }, { "name": "code_hash", "type": "uint256" }, { "name": "code_depth", "type": "uint16" }, { "name": "workchain_id", "type": "int8" }], "id": "0x100" }, { "name": "getBalance", "inputs": [], "outputs": [{ "name": "value0", "type": "uint128" }], "id": "0x16" }], "fields": [{ "name": "__uninitialized", "type": "bool" }, { "name": "__replay", "type": "uint64" }, { "name": "name_", "type": "string" }, { "name": "symbol_", "type": "string" }, { "name": "decimals_", "type": "uint8" }, { "name": "balance_", "type": "uint128" }, { "name": "root_pubkey_", "type": "uint256" }, { "name": "root_address_", "type": "address" }, { "name": "wallet_pubkey_", "type": "uint256" }, { "name": "owner_address_", "type": "optional(address)" }, { "name": "code_hash_", "type": "uint256" }, { "name": "code_depth_", "type": "uint16" }, { "name": "workchain_id_", "type": "int8" }], "events": [] },
    tvc: "te6ccgECZgEAG24AAgE0AwEBAcACAEPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAij/ACDBAfSkIFiS9KDgXwKKIO1T2QYEAQr0pCD0oQUAAAIBICYHATb/joAB0wCZcHAkAVURVQLZIgHhgQIA1xhxJNkIAS6OgCLTAJlwcCRVEQFVEdkiAeHT/3Ek2QkDxm3tQAfDAAPTP9Mf0x+VAe1Q2zAiwQ2OgOEiwQuOgOECwAryqQbyqASj8uBEMAj5AVQQlPkQ8qjtRNDTAAHyf9M/1NTTB9N/0//V+kDT/9WOgAHTAJZwI3BVINkiAeH6QHEk2R4RCgGQAdP/0w/SB9EH0S9WF75VD8MAsPJ8+COBA+iogggbd0CgVhYBuSDyvHD4ZIARYdMf1Y6AAdMAmXBwJFURAVUR2SIB4fpAcSTZCwFUcFUHgB1hVQHjBALV+kDTf9N/03+OgAHTAJlwcSRVEQFVEdkiAeHUcCTZDAL8AdEI0Q74ZF8DVhuAE2G6DsAAHrAEwAAE8uBk2zwjoFYXAbny0GXtR28QbxdvEFPwvPLQbfgAyHAhAc8LAFYQIcv/VhAByw9VAlYSvIIQCPDRf1YTAbxWF1UCygdWGFUEzlYgAcv/AclQI7BQIszJUpPLP1YcAcxWGwHMVhoBTA0BfssHVhkBy39WGAHL/xLMye1U+A/y4G1bIdMBIcEDmDDAA/LQY/I04QHAAvK00wCOgCIh4QHTBAHXGAEwIVUB2Q4BRDDSB9P/MPLgbvgAjoABMCUh4fgoVQEwIQFVQlUHVQdVB9kPAdrIdiEBzwsDcCIBzwsBydABziUBziFWHs8L/wFWEfoCcBLPCwCCEGeguV8TzwsfJQHLfyoBznDPC3+OgAijgCNhVQL0AHD6AnD6AnHPC2GZcRPPCwAezCbZVQQwIlUBVSJVEwHhcBPPCwABMCbZEAHSyVUEVQ8mVQpVA9s8cPsAyHAhAc8LAIATYVUBzoAVYVUFoVGCyz+AF2EBzIAWYQHMgBVhAcsHGMt/gBNhAcv/gBRhVQfL/1DSy/8byw8fygfJUAnMyVAJzMntVHpVwFUec4ASY4ASZQHZMwGIAsAL8qkG8qgEo/LgRDAI+QFUEJT5EPKo7UTQ0wAB8n/TP9TU0wfTf9P/1fpA0//VjoAB0wCWcCNwVSDZIgHh+kBxJNkSAZAB0//TD9IH0QfRL1YXvlUPwwCw8nz4I4ED6KiCCBt3QKBWFgG5IPK8cPhkgBFh0x/VjoAB0wCZcHAkVREBVRHZIgHh+kBxJNkTATYB0//VjoAB0wCZcHAkAVURVQLZIgHh+kBxJNkUAVhwVQ2AI2FVAeMEAtN/03/Tf9MA1dN/joAB0wCZcHAkAVURVQLZIgHh1HEk2RUC/gHRBdEO0V8DViKAGmG6gBVhwACAE2H4ZLAGwAANwAAG8uBk2zwnoFYdAbny0GXtR28QbxdvEFNgvPLQbfgAyHAhAc8LAFYXIcv/VhcByw9RObyCEAjw0X8qAbxWHVUEygdWHlUEzlYmAcv/AclQI7BQIszJUrPLP1YiAcxWIQFMFgFmzFYgAcsHVh8By39WHgHL/xLMye1U+A/y4G34AI6AATAnIeH4KFUBMCEBVcJVD1UPVQ/ZFwGmWwHAAMhwIQHPCwBwIQHPCz9WIAHMVhojzi8By/9WIFUBzFYfAcsH+CpwEs8Lf1YeAcv/joCfJFULMCFVAVUcAVWUVRzZVhMB4HEmAc8LAB7OLdkYAdhwJgHPCwEBVhnPC/9WGAHLD1YdAcoHyQHJdiYBzwsCAdBSJsxxF88LASQBzHQoAc8LAlYfAcoHcRLPCwAHyVBizgPMyVAFzHDPCwDJIPkAUUTPC//J0FACzin6AoApYQH0AHD6AnD6AnDPC18ZAv6OZshwIQHPCwCAGmFVBqFSGc8LP4AcYQHMgBthAcyAGmEBywcYy3+AFmFVAc4BgBdhzwv/AYAYYc8L/4ARYVUHy/9VDwHLD4ATYQHKB8kBzMkBzMntVIALgBFicoATY3OAFmOAFmUB2Y6AKAHgcxLPCwGCEGeguV8nAc8LH1AzHBoBkMxWJlUGy/9wzwsAcRLPCwBStMt/VhQBzikBy3+OgAmjl3ASzwsAKNnhcRLPCwCAEWEBzChwVR0BVQpVO1ULVSxVHQFVDFUd2RsBVMlWHVUFVQpVBlYlViVWJVYkViOAGGFVDVYSgBthgBNhVQ3bPHD7ADAg2T4BroIQZ6C5XycBzwsfVidVB8v/cRTPCwFwFM8LAFEczwt/VhUBzioBy3+OgAqjl3ASzwsAKdnhcRLPCwCAEmEBzClwVR4BVQtVPFUPVR4BVR5VHgFVDVUe2R0BQMlWHlUGVQstgBdhVQ1VBds8cPsAVTFfBSBVQVUGVRXZQgKUIsEWjoDhAsAN8qkG8qgEo/LgRDAI+QFUEJT5EPKo7UTQ0wAB8n/TP9TU0wfTf9P/1fpA0//VjoAB0wCWcCNwVSDZIgHh+kBxJNkhHwL+AdP/0w/SB9EH0S9WF75VD8MAsPJ8+COBA+iogggbd0CgVhYBuXAhgBhhVQHjBAHyvHD4ZIARYdX6QNEO8tBqMFYRVQi6BMAAFLDy4GTbPAFu8uBr8tBl+ADIcCEBzwsAU0DL/yQByw8qAcoHUrPOVhMBy/8CyVACzMlRFc8LP0wgAcRWEAHMLwHMLgHLB3DPC38sAcv/zMntVPgP+ADIWwrbPIEAo/sAyFF3zh/L/3AXzwsAUe7L/xnLDxTKB8lQBMzJUGvLPxjMFswUywdwzwt/y/8WzMntVIANVSBVJFU4XwoB2WECUIEBACMBuY6A4QLAFvKp7UTQ0wAB8n/TP9TU0wfTf9P/1fpA0//V0wAjIgDIjlYw0//TD9IH0V8E0XD4ZF8EgBRh0NMBAcACyAHysHMhAc8LAXAiAc8LAcnQAc4C+kAwUALOcc8LYYAWgBYTzwsfE8t/yVACzMlw+wBVQFV2VT+AEWUB2SIh4QH6QAEwIVUB2QFsgQEAE7ryqe1E0NMAAfJ/0z/U1NMH03/T/9X6QNP/1Y6AAdMAmXBxJFURAVUR2SIB4fpAcCTZJAGqAdP/0w/SB9EH0YAfYdDTAXD4ZAHAAsgB8rBzIQHPCwFwIgHPCwHJ0AHOgQEAIgHPCx+AEmEBzAP6QDABzlUPVQLMH8sHHct/cR7PC2FRjMv/UL3L/yUAyI5BcCsBzwsAUDvL/xnLDxTKB8kozMlwGc8LHx/0AHDPC38XzMkBzMlQBszJUAXMyXD7AIEBAFVQVXd0gBFjgBJlAdkDo1CZzplxHc8LABPOIdkpAeFwHc8LAFUCMCJVEQFVEdkCtt8B0NMAAfJwINYBlu1A7VDbMAHTAI6AATAhAeEwA9IfAcD/+ADy4GjtRNDTAALTHwLyfwLTP9TU0wfTf9P/1fpA0//VjoAB0wCZcHAkAVURVQLZIgHh+kBxJNkpJwH+AdP/0w/SB9EH0YIQZ6C5X4ASYQG68uBoyHAhAc8LAIASYdMf038wUcPOUM+gIYATYc8LP4ASYQHMgBFhAcxVDwHLB8t/UK7L/1DNy/+OHDBQKMv/yw8VygfJUAnMyVAEzMntVHBVgF8JAdkkIeFxHc8LABXOK3BVKVUEVSlVCigAFlUHVRlVC1UMVQzZATIwI8cBjoAgWQFVAeEkxwIh4XABVSJfBAHZKgO0MCPXSQTTHwXysJhwAVUiXwQB2SEB4W0hwQ2OgOEhwQuOgOEBwAryqe1E0NMAAfJ/0z/U1NMH03/T/9X6QNP/1Y6AAdMAm3BwcCVVAVUSVRLZIgHh+kAhcSXZSDQrAV4C0//TD9IH0QjRgBVh0x9wcPhkjoAC0wCecCRwVQMBVRIBVQRVBNkiAeH6QHEl2SwBQAHV+kDTf9N/03+OgAHTAJlwcSRVEQFVEdkiAeHUcCTZLQLCAdGAI2HTANMA0wD6QIATYfhk+kBWF8MAcS5VDVYjJ4AbYVUF2zz6AIIQCPDRfyIBvFUPwAAB8uBtLtMBIcEDmDDAA/LQY/I04QHAAvK00wCOgCIh4QHTBAHXGAEwIVUB2UsuAv4w0gfT/zDy4G7tR28QVQJVBoATYeMEAW8X+ABvEBWicvsCyHYhAc8LA3AiAc8LAcnQAc5WEAHOghBnoLlfIgHPCx9WEAHLfyYBznDPC39wEvoCgCZhAfQAVh1VAsv/cBL6AnD6AnHPC2GOgJdwE88LACLZVhoB4XETzwsAVhoBMC8ABs4i2QFMgBlhwACOgA6jmXESzwsAHsws2eFwEs8LAFUBMCxVAVWiVQ1VHNkxAv7JcIATYQFWE1UJVQPbPIEAgPsAyHAhAc8LAIAgYYASYaEhgCRhzws/gCNhAcyAImEBzIAhYQHLB8t/gB9hAcv/gB1hI86AHWEBy/+OKTCAGGFVAsv/gBdhAcsPgBphAcoHyQHMyQHMye1UeoAYYoAaYYAZZQHZVhAh4HEVzwsAMzIATIAaYQHOJHCAGWFygBpjgBJ6Y4AaYYAWYYAYYXKAGWOAG2GAG2HZAGbIgBghAc8LBRbOUAT6Am0B9ABw+gJw+gJxzwthghBnoLlfFc8LHxLLf85wzwt/zMkBzMkCcAHBDI6A4e1E0NMAAfJ/0z/U1NMH03/T/9X6QNP/1Y6AAdMAm3BwcCVVAVUSVRLZIgHh+kAhcSXZRTUBXgLT/9MP0gfRCNGAFWHTH3Bw+GSOgALTAJ5wJHBVAwFVEgFVBFUE2SIB4fpAcSXZNgE2AdP/1Y6AAdMAmXBwJAFVEVUC2SIB4fpAcSTZNwFEAdN/03/Tf9MA1dN/joAB0wCZcHAkAVURVQLZIgHh1HEk2TgD9gfAAAHRBdGAKWHTANMA0wD6QIAZYfhk+kBWHcMAcVYQVQ9WKSeAIWFVBds8+gCCEAjw0X8iAbzy4G3tR28Qbxf4KvgAAW8QE6Jy+wLIcCEBzwsAcCEBzws/ViUjzlYYAcv/VixVAcxWKwHMVioBywdwzwt/VigBy/+OgEs6OQA+nSNVBTAhVdaAFWFVbtlWFQHhcSUBzwsAgBZhAc4h2QL8gBphgBthVQrjBHAnAc8LAVYfVQLL/1YeAcsPViQBygfJAcl2JwHPCwIB0FInzHEYzwsBKgHMdCkBzwsCViYBygdxEs8LAAjJgCJhwABQg85QdszJUAfMcM8LAMkg+QBRZs8L/8nQUAXOcPoCgC1hAfQAcPoCcPoCcM8LX46AQzsCjI6AVhQB4HMSzwsBFcxWJCjL/3ESzwsAghBnoLlfGc8LH1YWAct/IwHOVhUBy3+OgJdwE88LACLZKQHgcRPPCwBWIgHOItk/PAFejoCAFmGjl3ASzwsAIdnhcRLPCwCAEWEBzCFwVRwBVQ1VClUrVQtVHFUNVTpeINk9AVjJcFYmVQlVAVUNVi9WL1YvVi5WLYAjYVUNVh9VD4AfYVUN2zyBAID7ADAj2T4A8shwIQHPC0BRgc6CEGeguV8iAc8LHxbLf1B1y/9Qt8wZzBfLB1AkzFBVzoEAxCIBzwsIG8sHGcv/UEnLf3EYzwsCAslwFM8Lf8v/EszJUDPMcc8LABLMcM8LAMkDzFAz+gJtAfQAcPoCcPoCc88LYcwByXESzwsAzMkBclYlKcv/cRPPCwGCEGeguV8azwsfVhcBy38kAc5WFgHLf46Al3AUzwsAI9kqAeBxFM8LAFYjAc4j2UABXI6AgBdho5dwEs8LACHZ4XESzwsAgBJhAcwhcFUJVRpVC1UaAVULVRoBVTheINlBAVzJcFYnVQpVAVYaVQmAGmFVBds8gQCA+wBVIl8FIFW0VQ5VHQGAEWGAEWGAEWHZQgBwyIEAxCEBzwsIGMsHFsv/ghBnoLlfF88LH1Bk+gJtAfQAcPoCcPoCcc8LYVAjy3/OE8t/zMkBzMkB/shwIQHPCwCAIWEizoAkYYAUYaGAJ2Ejyz+AJ2EBzIAmYQHMgCVhAcsHy38BgCFhzwv/AYAiYc8L/44rMIAcYVUCy/+AG2EByw+AHmEBygfJUALMyQHMye1UgAuAHGKAHmGAHWUB2Skh4HEVzwsAgB5hAc4kcIAdYXKAHmOAFnpEACpjgB5hgBphgBxhcoAdY4AfYYAfYdkBXu1E0NMAAfJ/0z/U1NMH03/T/9X6QNP/1Y6AAdMAmXBxJFURAVUR2SIB4fpAcCTZRgH+AdP/0w/SB9EH0YATYdMA0wDTAHD4ZIAXYdMfMAH6QDAHo8h2IQHPCwNwIgHPCwHJ0AHOGc5w+gKAFmEB9ABQKMsfcBj6AlYQVQfLf3AS+gIByXESzwthzMmAQPsAyHAhAc8LAIAUYSHLP1Hizh3L/4ATYVUNzIASYQHMgBFhAUcAkssHVQ8By38fy/+OIDBQfMv/FcsPGcoHyVALzMlQCMzJ7VSADFWAVQpfCgHZIyHgcRPPCwAZziFwVQFVKlUNVVdVClUNVQ1VDdkDkoIQQ4TymCIBuY6A4SHBFI6A4TDADfKp7UTQ0wAB8n/TP9TU0wfTf9P/1fpA0//VjoAB0wCbcHBwJVUBVRJVEtkiAeH6QCFxJdlSTUkDygLT/9MP0gfRCNFw+GQM8tBqIsMAgBNh0wDTANMA+kBwXzBVAlUCVQJVAlUEVQpVCds8+ABfBIARYfpAyFvbPIEAo/sAyHAhAc8LAFUPIcs/UaLOGcv/UPnMHcwbywdwzwt/GMv/S2FKAJCOHjBQpMv/F8sPygfJUALMyQHMye1UgA1VUFUHXwcB2Soh4XEdzwsAGM4rcFUaAVUJVQtVCVUIVQpVCFUKVQpVCVULVQxVDNkBcHGw7UABo9s8A/LgZFsHsyfDALBxsKPy0GQBUALHBfLgZFBDoBO58tBl7UdvEG8XbxASvPLQbe1QTAAObXBwWQFVAQFoAcAU8qntRNDTAAHyf9M/1NTTB9N/0//V+kDT/9WOgAHTAJlwcSRVEQFVEdkiAeH6QHAk2U4C7AHT/9MP0gfRB9GAE2HTANMA0wBw+GT6QDCAF2HTH46ACaPIcCEBzwsAdiEBzwsCcCMBzwsBydABzhbOcPoCVhkB9AAhVhHPC/9RUssfcBL6AlYYVQHMVhcBzHAS+gJxzwthAVYWzwsHVhUBy39WFAHL/1YSAc5QTwAqmnEWzwsALQHOLNkkAeFwFs8LACzZAc5Ss8v/KgHLD1YQAcoHySbMcBfPCx+AGmEB9ABwzwt/BslQBszJAczJUAPMyVADzMmAQPsAyHAhAc8LAIAWYSHLP1UPI85VDwHL/4AVYVUBzIAUYQHMgBNhAcsHgBJhAct/gBFhAcv/UQCIjiAwUKLL/xjLDx3KB8lQB8zJUAXMye1UgBRVoFUMXwwB2SUh4HEVzwsAHc4jcFUMVQpVG1U5VQtVCFUaAVUNVQ1VDdkCioIQZ6C5XyIBuY6A4YIQQ4TymBK68qntRNDTAAHyf9M/1NTTB9N/0//V+kDT/9WOgAHTAJlwcCQBVRFVAtkiAeH6QHEk2VpTAVgB0//TD9IH0QfRgBRh03/6QNN/cPhkjoAB0wCZcHEkVREBVRHZIgHh1HAk2VQBcIAbYdMA0wDTAPpAVhVVAccF8uBm7UdvEG8XAfpA+gAwUAuiAfgAbxCgIMIAjoAhIeFyIwH7AiDZVQOYMCyAGWGgVQ/AAFIIsXGwjoABo46A4fgoLgHHBVVCXwUhVeqAGmGAGWGAFGGAGWF0gBZjXiCAGmFzgBhj4MgwAds8gQCC+wAgcF4Q2VhWYQH+cENA4wRw+GT4RIIQgAAAACGxghD/////ErxwWOMEyHAhAc8LAYEAyiIBzwsfE8sfIVYYzwv/A8lwIwHPCwCAEWEkznYiAc8LAgPQcRfPCwBShct/VhZVBM5QZM5WGlUEzgLJVhWAE2FVBst/F8t/Vh4BzFYdAcxWHAHLB1YbAVcAdMv/UOXMHczJUALMyQHMyQHMUvrOCclwGvoCgBthAfQAcPoCcPoCcc8LYRnMyYEAgPsAB/hiIHBeENkB/shwIQHPCwCAGmEhyz+AGmEBzIAVYSPOgBVhAcv/gBhhVQHMgBdhAcsHG8t/gBVhAcv/jikwUP/L/x3LD4ARYQHKB8lQCMzJUAzMye1UghBDhPKYVeCAEWGAEGUB2Skh4HEUzwsAgBFhAc4jcFUPcoARY3KAEWNygBFjAVVcgBFZABphVQ1VHwGAEmGAEmHZAXKCEGeguV8SuvKp7UTQ0wAB8n/TP9TU0wfTf9P/1fpA0//VjoAB0wCZcHAkAVURVQLZIgHh+kBxJNlbAWwB0//TD9IH0QfRgBRh03/6QNN/1dP/cHD4ZI6AAtMAnnAkcFUDAVUSAVUEVQTZIgHh+kBxJdlcASyOgALTAJlwcSVVEQFVEdkiAeHUcCXZXQGMAdHIcCEBzwsAcCEBzws/Vhkjzi0By/9WIFUBzFYfAcxWHgHLB3DPC39WHAHL/46AKCHhcSUBzwsAKwHOVQMwIQFVIVUD2V4B+jAHwwBWE1UCy/9WEgHLD1YYAcoHyVACzIICATQTzwsXgCRh0wDTANMA+kAB0wEC+kBWGFUHyw8JyQH6ADANzMkg12UZzwsPVhgBy/8I+QAYzwv/ydD5AiHBA5gwwAPy0GPyNOEBwALytAHTAI6AIiHhAdMEAdcYATAhVQHZXwFWMNIH0/8wUAO68uBn7UdvEIATYVULoQFvF28QoCDCAI6AISHhciMB+wIg2WADrDBWFIAhYaCAGGHAAFIMsXGwjoABo46A4fgoVhYBxwVVUl8GIYAPgBJjgCFhdYAcY3WAHGNeMHOAHmOAH2GAIWGAIWFygCBj4MgwAds8gQCA+wAhcFnZZGJhADLIgBDPCwXOcPoCbQH0AHD6AnD6AnDPC2HJAf5wQ0DjBHD4ZPhEghCAAAAAIbGCEP////8SvHBY4wTIgQDKIQHPCx8Syx9wIgHPCwFxIwHPCwBWISTOAYAXYc8L/wLJUmTLf3YlAc8LAwTQAYAaYc8LfxbLf1YlAcxWJAHMViMBywdWIgHL/1BTzlYaAc5w+gKAJmEB9ABw+gJwYwDK+gJxzwthjjlWHyXL/3HPCwBWHAHOgBFhAcyAGGFVBc7JAczJVhkCzMlQBczJUAPMyVACzMmBAID7ADD4YiFwWdmXcBPPCwAi2S4B4XETzwsAgBNhAc4icFUPcoARY1VcVQhVidkB/shwIQHPCwCAIWEhyz+AIWEBzIAcYSPOgBxhAcv/gB9hVQHMgB5hAcsHFMt/gBxhAcv/jjAwgBZhVQHL/4AVYQHLD4AYYQHKB8lQA8zJUALMye1UghBnoLlfgBZigBhhgBdlAdkuIeBxFM8LAIAYYQHOI3CAF2FygBhjVfmAF2FlACSAGWGAFWFygBdjAYAZYYAZYdk=",
    code: "",
    codeHash: "b537ff04d96a57c32cde1b121389cc1115baedc2fdd94d6d14e4afe56315fa54",
};
//# sourceMappingURL=TONTokenWalletAccount.js.map