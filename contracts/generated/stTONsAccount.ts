
import { Account, AccountOptions } from "@eversdk/appkit";
import {
    AbiContract,
    ResultOfQueryTransactionTree,
} from "@eversdk/core";
import { 
    deployHelper,
    runHelper, 
    runLocalHelper, 
    Transaction, 
    ContractPackageEx, 
    Log, 
} from "../helpers";
export type stTONsLendOwnershipInput = {
    _answer_id: number /* uint32 */,
    answer_addr: string /* address */,
    evers: string | number | bigint /* uint128 */,
    dest: string /* address */,
    lend_balance: string | number | bigint /* uint128 */,
    lend_finish_time: number /* uint32 */,
    deploy_init_cl: string /* cell */,
    payload: string /* cell */,
};

export type stTONsReturnOwnershipInput = {
    tokens: string | number | bigint /* uint128 */,
};

export type stTONsReturnStakeInput = {
    dst: string /* address */,
    processing_evers: string | number | bigint /* uint128 */,
};

export type stTONsFinalizeInput = {
    dst: string /* address */,
    ignore_errors: boolean /* bool */,
};

export type stTONsReceiveStakeTransferInput = {
    source: string /* address */,
    amount: string | number | bigint /* uint128 */,
};

export type stTONsReceiveAnswerInput = {
    errcode: number /* uint32 */,
    comment: string | number | bigint /* uint64 */,
};

export type stTONsGetDetailsOutput = {
    owner_pubkey: string /* uint256 */,
    owner_address: string /* address */,
    depool: string /* address */,
    depool_pubkey: string /* uint256 */,
    balance: string /* uint128 */,
    lend_ownership: {
        lend_addr: string /* address */,
        lend_balance: string /* uint128 */,
        lend_finish_time: number /* uint32 */,
    }[] /* tuple[] */,
    lend_balance: string /* uint128 */,
    transferring_stake_back: boolean /* bool */,
    last_depool_error: number /* uint8 */,
};

export type stTONsCalcStTONsAddrInput = {
    code: string /* cell */,
    owner_pubkey: string | number | bigint /* uint256 */,
    owner_address?: string /* optional(address) */,
    depool: string /* address */,
    depool_pubkey: string | number | bigint /* uint256 */,
};

export type stTONsCalcStTONsAddrOutput = {
    value0: string /* address */,
};


export class stTONsAccount extends Account {
    static package: ContractPackageEx = {
        abi: {"ABI version":2,"version":"2.2.0","header":["pubkey","time","expire"],"functions":[{"name":"onDeploy","inputs":[],"outputs":[],"id":"0xa"},{"name":"lendOwnership","inputs":[{"name":"_answer_id","type":"uint32"},{"name":"answer_addr","type":"address"},{"name":"evers","type":"uint128"},{"name":"dest","type":"address"},{"name":"lend_balance","type":"uint128"},{"name":"lend_finish_time","type":"uint32"},{"name":"deploy_init_cl","type":"cell"},{"name":"payload","type":"cell"}],"outputs":[],"id":"0xb"},{"name":"returnOwnership","inputs":[{"name":"tokens","type":"uint128"}],"outputs":[],"id":"0xc"},{"name":"returnStake","inputs":[{"name":"dst","type":"address"},{"name":"processing_evers","type":"uint128"}],"outputs":[],"id":"0xd"},{"name":"finalize","inputs":[{"name":"dst","type":"address"},{"name":"ignore_errors","type":"bool"}],"outputs":[],"id":"0xe"},{"name":"receiveStakeTransfer","inputs":[{"name":"source","type":"address"},{"name":"amount","type":"uint128"}],"outputs":[],"id":"0x23c4771d"},{"name":"receiveAnswer","inputs":[{"name":"errcode","type":"uint32"},{"name":"comment","type":"uint64"}],"outputs":[],"id":"0x3f109e44"},{"name":"getDetails","inputs":[],"outputs":[{"name":"owner_pubkey","type":"uint256"},{"name":"owner_address","type":"address"},{"name":"depool","type":"address"},{"name":"depool_pubkey","type":"uint256"},{"name":"balance","type":"uint128"},{"components":[{"name":"lend_addr","type":"address"},{"name":"lend_balance","type":"uint128"},{"name":"lend_finish_time","type":"uint32"}],"name":"lend_ownership","type":"tuple[]"},{"name":"lend_balance","type":"uint128"},{"name":"transferring_stake_back","type":"bool"},{"name":"last_depool_error","type":"uint8"}],"id":"0xf"},{"name":"calcStTONsAddr","inputs":[{"name":"code","type":"cell"},{"name":"owner_pubkey","type":"uint256"},{"name":"owner_address","type":"optional(address)"},{"name":"depool","type":"address"},{"name":"depool_pubkey","type":"uint256"}],"outputs":[{"name":"value0","type":"address"}],"id":"0x10"}],"fields":[{"name":"__uninitialized","type":"bool"},{"name":"owner_pubkey_","type":"uint256"},{"name":"owner_address_","type":"optional(address)"},{"components":[{"name":"addr_","type":"address"}],"name":"depool_","type":"tuple"},{"name":"depool_pubkey_","type":"uint256"},{"name":"balance_","type":"uint128"},{"name":"lend_ownership_","type":"optional(cell)"},{"name":"transferring_stake_back_","type":"bool"},{"name":"last_depool_error_","type":"uint8"}],"events":[]} as unknown as AbiContract,
        tvc: "",
        code: "",
        codeHash: "8b7b278db12d2a722fc22eef1831790254dac9c68e99aea57a0dd92b42647925",
    };
    log: Log;
    constructor(
        options: AccountOptions & {
            log?: Log
        }
    ) {
        super(stTONsAccount.package, options);
        this.log = options.log ?? Log.default;
    }
    async deployContract(): Promise<{
        transaction: Transaction,
    }> {
        return await deployHelper(this, "", {});
    }

    async runOnDeploy(): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "onDeploy", {});
    }

    async onDeploy(): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "onDeploy", {});
    }

    async runLendOwnership(input: stTONsLendOwnershipInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "lendOwnership", input);
    }

    async lendOwnership(input: stTONsLendOwnershipInput): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "lendOwnership", input);
    }

    async runReturnOwnership(input: stTONsReturnOwnershipInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "returnOwnership", input);
    }

    async returnOwnership(input: stTONsReturnOwnershipInput): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "returnOwnership", input);
    }

    async runReturnStake(input: stTONsReturnStakeInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "returnStake", input);
    }

    async returnStake(input: stTONsReturnStakeInput): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "returnStake", input);
    }

    async runFinalize(input: stTONsFinalizeInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "finalize", input);
    }

    async finalize(input: stTONsFinalizeInput): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "finalize", input);
    }

    async runReceiveStakeTransfer(input: stTONsReceiveStakeTransferInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "receiveStakeTransfer", input);
    }

    async receiveStakeTransfer(input: stTONsReceiveStakeTransferInput): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "receiveStakeTransfer", input);
    }

    async runReceiveAnswer(input: stTONsReceiveAnswerInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
    }> {
        return await runHelper(this, "receiveAnswer", input);
    }

    async receiveAnswer(input: stTONsReceiveAnswerInput): Promise<{
        transaction: Transaction,
    }> {
        return await runLocalHelper(this, "receiveAnswer", input);
    }

    async runGetDetails(): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
        output: stTONsGetDetailsOutput,
    }> {
        return await runHelper(this, "getDetails", {});
    }

    async getDetails(): Promise<{
        transaction: Transaction,
        output: stTONsGetDetailsOutput,
    }> {
        return await runLocalHelper(this, "getDetails", {});
    }

    async runCalcStTONsAddr(input: stTONsCalcStTONsAddrInput): Promise<{
        transaction: Transaction,
        transactionTree: ResultOfQueryTransactionTree,
        output: stTONsCalcStTONsAddrOutput,
    }> {
        return await runHelper(this, "calcStTONsAddr", input);
    }

    async calcStTONsAddr(input: stTONsCalcStTONsAddrInput): Promise<{
        transaction: Transaction,
        output: stTONsCalcStTONsAddrOutput,
    }> {
        return await runLocalHelper(this, "calcStTONsAddr", input);
    }

}

